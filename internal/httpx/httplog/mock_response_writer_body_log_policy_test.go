// Code generated by mockery v2.46.2. DO NOT EDIT.

package httplog

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockResponseWriterBodyLogPolicy is an autogenerated mock type for the ResponseWriterBodyLogPolicy type
type MockResponseWriterBodyLogPolicy struct {
	mock.Mock
}

type MockResponseWriterBodyLogPolicy_Expecter struct {
	mock *mock.Mock
}

func (_m *MockResponseWriterBodyLogPolicy) EXPECT() *MockResponseWriterBodyLogPolicy_Expecter {
	return &MockResponseWriterBodyLogPolicy_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: headers, statusCode, body
func (_m *MockResponseWriterBodyLogPolicy) Execute(headers http.Header, statusCode int, body []byte) bool {
	ret := _m.Called(headers, statusCode, body)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(http.Header, int, []byte) bool); ok {
		r0 = rf(headers, statusCode, body)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockResponseWriterBodyLogPolicy_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockResponseWriterBodyLogPolicy_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - headers http.Header
//   - statusCode int
//   - body []byte
func (_e *MockResponseWriterBodyLogPolicy_Expecter) Execute(headers interface{}, statusCode interface{}, body interface{}) *MockResponseWriterBodyLogPolicy_Execute_Call {
	return &MockResponseWriterBodyLogPolicy_Execute_Call{Call: _e.mock.On("Execute", headers, statusCode, body)}
}

func (_c *MockResponseWriterBodyLogPolicy_Execute_Call) Run(run func(headers http.Header, statusCode int, body []byte)) *MockResponseWriterBodyLogPolicy_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.Header), args[1].(int), args[2].([]byte))
	})
	return _c
}

func (_c *MockResponseWriterBodyLogPolicy_Execute_Call) Return(_a0 bool) *MockResponseWriterBodyLogPolicy_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockResponseWriterBodyLogPolicy_Execute_Call) RunAndReturn(run func(http.Header, int, []byte) bool) *MockResponseWriterBodyLogPolicy_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockResponseWriterBodyLogPolicy creates a new instance of MockResponseWriterBodyLogPolicy. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockResponseWriterBodyLogPolicy(t interface {
	mock.TestingT
	Cleanup(func())
},
) *MockResponseWriterBodyLogPolicy {
	mock := &MockResponseWriterBodyLogPolicy{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
